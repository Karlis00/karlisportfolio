{"mappings":"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","sources":["app/models/users.js","app/routes/index.server.routes.js","app/controllers/index.server.controller.js","app/controllers/aboutMe.server.controller.js","app/controllers/projects.server.controller.js","app/controllers/services.server.controller.js","app/controllers/contact.server.controller.js","app/controllers/user.server.controller.js","app/controllers/business.server.controller.js","app/models/business.js","server.js","config/express.js","config/env/development.js","config/db.js"],"sourcesContent":["/*\r\nCOMP 229 Assignment 2 - user.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\n\r\n//require modules\r\nlet mongoose = require('mongoose');\r\nlet passportLocalMongoose = require('passport-local-mongoose');\r\n\r\nlet User = mongoose.Schema\r\n(\r\n    {\r\n        username: \r\n        {\r\n            type: String,\r\n            default: '',\r\n            trim: true,\r\n            require: 'Username is required.'\r\n        },\r\n        email:\r\n        {\r\n            type: String,\r\n            default: '',\r\n            trim: true,\r\n            require: 'Email is required.'\r\n        },\r\n        displayName:\r\n        {\r\n            type: String,\r\n            default: '',\r\n            trim: true,\r\n            require: 'Display name is required.'\r\n        },\r\n        created:\r\n        {\r\n            type: Date,\r\n            default: Date.now,\r\n        },\r\n        update:\r\n        {\r\n            type: Date,\r\n            default: Date.now,\r\n        }\r\n    },\r\n    {\r\n        collection: 'users'\r\n    }\r\n);\r\n\r\n//configure options for User Model\r\n\r\nlet options = ({missingPasswordError: 'Wrong or missing password'});\r\n\r\nUser.plugin(passportLocalMongoose, options);\r\n\r\nmodule.exports.User = mongoose.model('User', User);","/*\r\nCOMP 229 Assignment 2 - index.server.routes.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\n\r\nfunction requireAuth(req, res, next)\r\n{\r\n    //check if the user is logged in\r\n    if(!req.isAuthenticated())\r\n    {\r\n        return res.redirect('/login');\r\n    }\r\n    next();\r\n}\r\n\r\nmodule.exports = function(app) {\r\n    var index = require('../controllers/index.server.controller'),\r\n    aboutMe = require('../controllers/aboutMe.server.controller'),\r\n    projects = require('../controllers/projects.server.controller'),\r\n    services = require('../controllers/services.server.controller'),\r\n    contact = require('../controllers/contact.server.controller'),\r\n    user = require('../controllers/user.server.controller'),\r\n    business = require('../controllers/business.server.controller')\r\n    app.get('/', index.render);\r\n    app.get('/aboutMe', aboutMe.render);\r\n    app.get('/projects', projects.render);\r\n    app.get('/services', services.render);\r\n    app.get('/contact', contact.render);\r\n    app.get('/login', user.loginRender);\r\n    app.post('/login', user.loginProcess);\r\n    app.get('/register', user.registerRender);\r\n    app.post('/register', user.registerProcess);\r\n    app.get('/logout', user.logoutProcess);\r\n    app.get('/business',requireAuth, business.render);\r\n    app.get('/business/edit/:id',requireAuth, business.renderEditPage);\r\n    app.post('/business/edit/:id',requireAuth, business.edit);\r\n    app.get('/business/delete/:id',requireAuth, business.delete);\r\n    app.get('/business/add',requireAuth, business.renderAddPage);\r\n    app.post('/business/add',requireAuth, business.add);\r\n    };","/*\r\nCOMP 229 Assignment 2 - index.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\nexports.render = function(req, res) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n        }\r\n        req.session.lastVisit = new Date();\r\n        \r\n    //to render the index.ejs in views folder\r\n    res.render('index', {\r\n        title: \"Kam's Portfolio\",\r\n        login: req.isAuthenticated(),\r\n        username: req.body.username,\r\n        statement: \"State The Problem. Solve The Problem.\", \r\n        img: \"img/rings.gif\",\r\n        logo: \"img/logo.png\",\r\n        imgAlt: \"Rings of problem stating and solving\"\r\n    });\r\n    };\r\n    ","/*\r\nCOMP 229 Assignment 2 - aboutMe.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\n\r\nexports.render = function(req, res) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n        }\r\n        req.session.lastVisit = new Date();\r\n        \r\n    //to render the aboutme.ejs in views folder\r\n    res.render('aboutme', {\r\n        title: \"Kam's Portfolio\",\r\n        login: req.isAuthenticated(),\r\n        username: req.params.username,\r\n        page: \"About Me\", \r\n        img: \"img/profilepic.jpg\",\r\n        logo: \"img/logo.png\",\r\n        imgAlt: \"My Profile Picture\"\r\n    });\r\n    };\r\n    ","/*\r\nCOMP 229 Assignment 2 - project.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\n\r\nexports.render = function(req, res) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n        }\r\n        req.session.lastVisit = new Date();\r\n        \r\n    //to render the projects.ejs in views folder\r\n    res.render('projects', {\r\n        title: \"Kam's Portfolio\",\r\n        page: \"Projects\", \r\n        login: req.isAuthenticated(),\r\n        username: req.body.username,\r\n        projectImg1: \"img/Project1.png\",\r\n        projectImg2: \"img/Project2.png\",\r\n        projectImg3: \"img/Project3.png\",\r\n        logo: \"img/logo.png\",\r\n        projectAlt1: \"Screenshot of ongoing education application: Nexxus\",\r\n        projectAlt2: \"Screenshot of Real Estate Website Demo\",\r\n        projectAlt3: \"Screenshot of Mobile Services Website Demo\"\r\n    });\r\n    };\r\n    ","/*\r\nCOMP 229 Assignment 2 - services.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\n\r\nexports.render = function(req, res) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n        }\r\n        req.session.lastVisit = new Date();\r\n        \r\n    //to render the services.ejs in views folder\r\n    res.render('services', {\r\n        title: \"Kam's Portfolio\",\r\n        page: \"Services\", \r\n        serviceIcon1: \"img/code.png\",\r\n        serviceIcon2: \"img/itsupport.png\",\r\n        serviceIcon3: \"img/dmarketing.png\",\r\n        serviceAlt1: \"Icon of Coding\",\r\n        serviceAlt2: \"Icon of IT Support\",\r\n        serviceAlt3: \"Icon of Digital Marketing\",\r\n        logo: \"img/logo.png\",\r\n        login: req.isAuthenticated(),\r\n        username: req.body.username,\r\n    });\r\n    };\r\n    ","/*\r\nCOMP 229 Assignment 2 - contact.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\nexports.render = function(req, res) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n        }\r\n        req.session.lastVisit = new Date();\r\n        \r\n    //to render the contact.ejs in views folder\r\n    res.render('contact', {\r\n        title: \"Kam's Portfolio\",\r\n        login: req.isAuthenticated(),   \r\n        username: req.body.username,    \r\n        page: \"Contact Me\", \r\n        img: \"img/email.png\",\r\n        logo: \"img/logo.png\",\r\n        imgAlt: \"An Email Picture\"\r\n    });\r\n    };\r\n    ","/*\r\nCOMP 229 Assignment 2 - user.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nDate: October 15, 2022\r\n*/\r\n\r\nlet express = require('express');\r\nlet router = express.Router;\r\nlet mongoose = require('mongoose');\r\nlet passport = require('passport');\r\n\r\n//User Model\r\nlet userModel = require('../models/users')\r\nlet User = userModel.User;\r\n\r\nexports.loginRender = function(req, res, next) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n        }\r\n        req.session.lastVisit = new Date();\r\n        \r\n        if(!req.user)\r\n        {\r\n            res.render('login', {\r\n                title: \"Kam's Portfolio\",\r\n                page: \"Log In\",\r\n                logo: \"img/logo.png\",\r\n                login: req.isAuthenticated(),\r\n                username: req.body.username,\r\n                messages: req.flash('loginMessage'),\r\n                displayName: req.user ? req.user.displayName: ''\r\n            });\r\n        }\r\n        else\r\n        {\r\n        return res.redirect('/');\r\n        }\r\n\r\n};\r\n    \r\nexports.loginProcess = function(req, res, next) {\r\n        passport.authenticate('local',\r\n        (err, user, info) => {\r\n        if(err)\r\n        {\r\n            return next(err);\r\n        }\r\n        if(!user)\r\n        {\r\n            req.flash('loginMessage', 'Authentication Error');\r\n            return res.redirect('/login');\r\n        }\r\n\r\n        req.login(user, (err) => {\r\n            if(err)\r\n            {\r\n                return next(err);\r\n            }\r\n            return res.redirect('/business');\r\n        \r\n        });\r\n        })(req,res,next);\r\n};\r\n\r\nexports.registerRender = function(req, res, next) {\r\n        if (req.session.lastVisit) {\r\n            console.log(req.session.lastVisit);\r\n            }\r\n            req.session.lastVisit = new Date();\r\n        \r\n            if(!req.user)\r\n            {\r\n                res.render('auth/register', {\r\n                    title: \"Kam's Portfolio\",\r\n                    page: \"Register\",\r\n                    logo: \"img/logo.png\",\r\n                    login: req.isAuthenticated(),\r\n                    username: req.body.username,\r\n                    messages: req.flash('registerMessage'),\r\n                    displayName: req.user ? req.user.displayName: ''\r\n                });\r\n            }\r\n            else\r\n            {\r\n            return res.render('/');\r\n            }\r\n};\r\n\r\nexports.registerProcess = function(req, res, next) {\r\n    // instantiate a user object\r\n    let newUser = new User({\r\n        username: req.body.username,\r\n        email: req.body.email,\r\n        displayName: req.body.displayName\r\n    });\r\n\r\n    User.register(newUser, req.body.password, (err)=>{\r\n    if(err)\r\n    {\r\n       console.log(\"Error: Inserting New User\");\r\n       if (err.name == \"UserExistsError\") \r\n       {\r\n         req.flash(\r\n            'registerMessage', 'Registration Error: User Already Exists.'\r\n         );\r\n         console.log('err: exist user')\r\n       }\r\n       return res.render('auth/register',{\r\n        title: \"Kam's Portfolio\",\r\n        page: \"Register\",\r\n        logo: \"img/logo.png\",\r\n        login: req.isAuthenticated(),\r\n        username: req.body.username,\r\n        messages: req.flash('registerMessage'),\r\n        displayName: req.user ? req.user.displayName: ''\r\n       })\r\n    }\r\n    else\r\n    {\r\n        //if no err, successfully register\r\n\r\n        //redirect and authercate\r\n        return passport.authenticate('local')(req,res,()=>{\r\n            res.redirect('/business')\r\n        })\r\n    }\r\n\r\n})\r\n};\r\n\r\nexports.logoutProcess = function (req, res, next) {\r\n    req.logout((err)=>{\r\n        if (err) { return next(err); }\r\n    });\r\n    res.redirect('/');\r\n\r\n};","/*\r\nCOMP 229 Assignment 2 - business.server.controller.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 16, 2022\r\n*/\r\nvar Contact = require('../models/business');\r\n\r\nmodule.exports.render = function(req, res) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n    }\r\n    req.session.lastVisit = new Date();\r\n        \r\n    //to render the business.ejs in views folder\r\n\r\n    Contact.find((err, contactList) => {\r\n        if(err)\r\n        {\r\n            return console.error(err);\r\n        }\r\n        else\r\n        {\r\n\r\n            res.render('business', {\r\n                title: \"Kam's Portfolio\",\r\n                login: req.isAuthenticated(),\r\n                page: 'Business Contact List', \r\n                logo: \"img/logo.png\",\r\n                ContactList: contactList\r\n            });            \r\n        }\r\n    }).sort({\"name\":1});\r\n    \r\n};\r\n\r\nmodule.exports.renderEditPage = function (req, res, next) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n    }\r\n    req.session.lastVisit = new Date();\r\n\r\n    let id = req.params.id;\r\n\r\n    Contact.findById(id, (err, contactToEdit) => {\r\n        if(err)\r\n        {\r\n            console.log(err);\r\n            res.end(err);\r\n        }\r\n        else\r\n        {\r\n            res.render('business/edit', {\r\n                title: \"Kam's Portfolio\",\r\n                page: 'Edit Contact List',\r\n                login: req.isAuthenticated(),\r\n                logo: \"/img/logo.png\",\r\n                contact: contactToEdit\r\n            })  \r\n        }\r\n    })\r\n};\r\n\r\nmodule.exports.renderAddPage = function (req, res, next) {\r\n    if (req.session.lastVisit) {\r\n        console.log(req.session.lastVisit);\r\n    }\r\n    req.session.lastVisit = new Date();\r\n\r\n    let id = req.params.id;\r\n    res.render('business/add', {\r\n        title: \"Kam's Portfolio\",\r\n        page: 'Add Contact List',\r\n        login: req.isAuthenticated(),\r\n        logo: \"/img/logo.png\",\r\n    })            \r\n};\r\n\r\nmodule.exports.edit = function(req, res, next) {\r\n        \r\n    let id = req.params.id;\r\n\r\n    let updateContact = Contact({\r\n        \"_id\": id,\r\n        \"name\": req.body.name,\r\n        \"tel\": req.body.tel,\r\n        \"email\": req.body.email\r\n    });\r\n\r\n    Contact.updateOne({_id: id}, updateContact, (err) => {\r\n        if(err) {\r\n            console.log(err);\r\n            res.end(err);\r\n        }\r\n        else\r\n        {\r\n            res.redirect('/business');\r\n        }\r\n    });\r\n    \r\n};\r\n\r\nmodule.exports.delete = function (req, res, next) {\r\n    let id = req.params.id;\r\n\r\n    Contact.remove({_id: id}, (err) => {\r\n        if(err)\r\n        {\r\n            console.log(err);\r\n            res.end(err);\r\n        }\r\n        else\r\n        {\r\n            res.redirect('/business');\r\n        }\r\n    });\r\n};\r\n\r\nmodule.exports.add = function (req, res, next) {\r\n    let newContact = Contact({\r\n        \"name\": req.body.name,\r\n        \"tel\": req.body.tel,\r\n        \"email\": req.body.email\r\n    });\r\n\r\n    Contact.create(newContact, (err, Contact) =>{\r\n        if(err)\r\n        {\r\n            console.log(err);\r\n            res.end(err);\r\n        }\r\n        else\r\n        {\r\n            // refresh the business page\r\n            res.redirect('/business');\r\n        }\r\n    });\r\n\r\n};","/*\r\nCOMP 229 Assignment 2 - business.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nUpdate Date: October 15, 2022\r\n*/\r\n\r\nlet mongoose = require('mongoose');\r\n\r\nvar contactListModel = mongoose.Schema({\r\n    name: String,\r\n    tel: Number,\r\n    email: String\r\n},\r\n{\r\n    collection: \"contactlist\"\r\n});\r\n\r\nmodule.exports = mongoose.model('Contact', contactListModel);","/* \r\nCOMP 229 Assignment 1 - server.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nDate: October 2, 2022\r\n*/\r\n\r\n// process.env.NODE_ENV = process.env.NODE_ENV || 'development';\r\n\r\nvar express = require('./config/express');\r\n\r\nvar app = express();\r\n\r\nvar host = 'localhost';\r\nvar port = process.env.PORT || 5000;\r\n\r\n\r\napp.listen(port);\r\n\r\nconsole.log(`Server running at http://${host}:${port}`);\r\n\r\nmodule.exports = app;\r\n","/* \r\nCOMP 229 Assignment 1 - express.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nDate: October 2, 2022\r\n*/\r\n\r\nlet config = require('./env/development'),\r\nexpress = require('express'),\r\nmorgan = require('morgan'),\r\ncompress = require('compression'),\r\nbodyParser = require('body-parser'),\r\nmethodOverride = require('method-override');\r\nconst { defaultConfiguration } = require('../server.js');\r\n\r\n// modules for authentication\r\nlet session = require('express-session'),\r\npassport = require('passport'),\r\npassportLocal = require('passport-local'),\r\nlocalStrategy = passportLocal.Strategy,\r\nflash = require('connect-flash');\r\n\r\n// database setup\r\nlet mongoose = require('mongoose');\r\nlet DB = require('./db');\r\n\r\n// point mongoose to the DB URI\r\nmongoose.connect(DB.URI, {useNewUrlParser: true, useUnifiedTopology: true});\r\n\r\nlet mongoDB = mongoose.connection;\r\nmongoDB.on('error', console.error.bind(console, 'Connection Error:'));\r\nmongoDB.once('open', ()=>{\r\n  console.log('Connected to MongoDB...');\r\n});\r\n\r\nmodule.exports = function() {\r\nvar app = express();\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    app.use(morgan('dev'));\r\n} else if (process.env.NODE_ENV === 'production') {\r\n    app.use(compress());\r\n}\r\n\r\napp.use(bodyParser.urlencoded({\r\n    extended: true\r\n}));\r\napp.use(bodyParser.json());\r\napp.use(methodOverride());\r\n\r\n//setup express session\r\napp.use(session({\r\n    saveUninitialized: false,\r\n    resave: false,\r\n    secret: config.sessionSecret\r\n}));\r\n\r\n//intialize flash\r\napp.use(flash());\r\n\r\n//intialize passport\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n//passport user config\r\n\r\n//create a User Model Instance\r\nlet userModel = require('../app/models/users');\r\nlet User = userModel.User;\r\n\r\n//implement a user auth strategy\r\npassport.use(User.createStrategy());\r\n\r\n//serialize and deserialize user information\r\npassport.serializeUser(User.serializeUser());\r\npassport.deserializeUser(User.deserializeUser());\r\n\r\n\r\n// set view path\r\napp.set('views', './app/views');\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(express.static('./public'));\r\n\r\nrequire('../app/routes/index.server.routes.js')(app);\r\nreturn app;\r\n};\r\n","/* \r\nCOMP 229 Assignment 1 - development.js\r\nStudent Name: Kam Hung Chan (Karlis)\r\nID: 301232477\r\nDate: October 2, 2022\r\n*/\r\n\r\nmodule.exports = {\r\n    sessionSecret: 'developmentSessionSecret'\r\n    };\r\n    ","module.exports = \r\n{\r\n    \"URI\": \"mongodb+srv://karlischan:301232477@cluster0.sao7wnx.mongodb.net/test\"\r\n}"],"names":[],"version":3,"file":"index.js.map"}